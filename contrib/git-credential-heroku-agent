#!/bin/sh

#
# git-credential-heroku-agent
#
# A Git credential helper that uses attempts to procure a privileged token that
# can sip two-factor authentication from heroku-agent so that pre-authorization
# is not required to push to paranoid apps.
#
# More information on the Git credentials API:
#
#     https://www.kernel.org/pub/software/scm/git/docs/technical/api-credentials.html
#

# Checks that a program is present on the system. Exits if it is not.
function check_program() {
    local command="$1"

    hash "$command" 2>/dev/null
    if [ "$?" != "0" ]; then
      >&2 echo "Command $command is required"
      exit 1
    fi
}

# Extracts a value from a set of newline separated fields which are used in Git
# credential helper interface like:
#
#     host=git.heroku.com
#     username=brandur@heroku.com
#
function extract_value() {
    local data="$1"
    local key="$2"

    RET=""
    while IFS='=' read -ra tuple; do
        if [ "${tuple[0]}" == "$key" ]; then
            RET=${tuple[1]}
            break
        fi
    done <<< "$data"
}

# Prints a line to standard error if verbose mode is enabled.
function print_verbose() {
    local str="$1"
    if [ "$VERBOSE" == "true" ]; then
        >&2 echo "git-credential-heroku-agent: $str"
    fi
}

check_program "git-credential-netrc"
check_program "heroku-agent"

VERBOSE="false"
for arg in $@; do
    if [ "$arg" == "-v" ] || [ "$arg" == "--verbose" ]; then
        VERBOSE="true"
    fi
done

params=`cat /dev/stdin`

extract_value "$params" "host"
host=$RET

print_verbose "looking up $host"

# Shell out to .netrc to get basic credentials.
creds=`git-credential-netrc $@ <<< "$params"`

extract_value "$creds" "username"
username=$RET

extract_value "$creds" "password"
password=$RET

if [ "$password" != "" ]; then
    print_verbose "got creds $username ${password:0:12}..."
fi

`echo "$host" | grep -q "\.\(heroku\|herokudev\)\.com"`
if [ "$?" == "0" ]; then
    print_verbose "exchanging for privileged token"

    # If we're on a Heroku domain, attempt to use heroku-agent to upgrade our
    # credentials from .netrc to a set that can skip two factor authentication.
    # Fall back to whatever was given to us by .netrc.
    upgraded_token=`heroku-agent upgrade-token $password`
    if [ "$?" == "0" ]; then
        print_verbose "got upgraded token ${upgraded_token:0:12}..."
        creds=${creds/$password/$upgraded_token}
    else
        print_verbose 'no upgraded token available, try `hk authorize`'
    fi
fi

echo "$creds"
